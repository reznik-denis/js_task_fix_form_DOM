{"mappings":"AAAA;AAEA,SAAS,gBAAgB,CAAC,eAAe,OAAO,CAAC,CAAC;IAChD,MAAM,WAAW,KAAK,YAAY,CAAC;IACnC,MAAM,SAAS,KAAK,YAAY,CAAC;IACjC,MAAM,eAAe,SAAS,aAAa,CAAC;IAE5C,aAAa,YAAY,CAAC,OAAO;IACjC,aAAa,WAAW,GAAG,wBAAwB,UAAU,WAAW;IACxE,aAAa,SAAS,CAAC,GAAG,CAAC;IAE3B,KAAK,YAAY,CACf,eACA,eAAe,wBAAwB;IAEzC,KAAK,MAAM,CAAC;AACd;AAEA,SAAS,eAAe,IAAI;IAC1B,IAAI,UAAU,wBAAwB;IAEtC,UAAU,QAAQ,OAAO,CAAC,aAAa,CAAC,QAAU,MAAM,WAAW;IAEnE,OAAO,QAAQ,KAAK,CAAC,GAAG,GAAG,WAAW,KAAK,QAAQ,KAAK,CAAC;AAC3D;AAEA,SAAS,wBAAwB,GAAG;IAClC,OAAO,IAAI,OAAO,CAAC,mBAAmB;AACxC","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\ndocument.querySelectorAll('.field-text').forEach((elem) => {\n  const nameAttr = elem.getAttribute('name');\n  const idAttr = elem.getAttribute('id');\n  const lableElement = document.createElement('label');\n\n  lableElement.setAttribute('for', idAttr);\n  lableElement.textContent = convertToSeparatedWords(nameAttr).toUpperCase();\n  lableElement.classList.add('field-label');\n\n  elem.setAttribute(\n    'placeholder',\n    firstLetterCap(convertToSeparatedWords(nameAttr)),\n  );\n  elem.before(lableElement);\n});\n\nfunction firstLetterCap(word) {\n  let sepWord = convertToSeparatedWords(word);\n\n  sepWord = sepWord.replace(/ ([A-Z])/g, (match) => match.toLowerCase());\n\n  return sepWord.slice(0, 1).toUpperCase() + sepWord.slice(1);\n}\n\nfunction convertToSeparatedWords(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1 $2');\n}\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}